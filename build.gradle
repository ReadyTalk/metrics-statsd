buildscript {
  repositories {
    maven { url 'http://repo.springsource.org/plugins-release' }
  }
  dependencies {
    classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.3'
  }
}

subprojects {

  apply plugin: 'java'
  apply plugin: 'maven-publish'
  apply plugin: 'checkstyle'
  apply plugin: 'findbugs'
  apply plugin: 'jacoco'

  apply plugin: 'propdeps'
  apply plugin: 'propdeps-maven'
  apply plugin: 'propdeps-idea'
  apply plugin: 'propdeps-eclipse'

  group = 'com.readytalk'

  description = 'Metrics StatsD Support'

  sourceCompatibility = 1.6
  targetCompatibility = 1.6

  repositories {
    mavenCentral()
  }

  task sourceJar(type: Jar) {
      from sourceSets.main.allJava
  }

  publishing {
    publications {
      mavenJava(MavenPublication) {
        from components.java

        artifact sourceJar {
          classifier "sources"
        }
      }
    }
  }

  dependencies {
    compile ([
      'org.slf4j:slf4j-api:1.7.5',
    ])
  
    optional ([
      'com.google.code.findbugs:jsr305:2.0.1',
      'com.google.code.findbugs:annotations:2.0.1',
    ])
  
    testCompile ([
      'junit:junit:4.11',
      'org.mockito:mockito-all:1.9.5',
      'org.slf4j:slf4j-jdk14:1.7.5',
      'org.easytesting:fest-assert-core:2.0M10',
    ])
  }

  tasks.withType(Compile) { 
    options.compilerArgs << "-Xlint:all" 
  } 

  checkstyle {
    toolVersion = '5.6'
    showViolations = false
    sourceSets = [sourceSets.main]
    configFile = file("$rootDir/config/checkstyle/checkstyle.xml")
  }

  findbugs {
    toolVersion = '2.0.1'
    ignoreFailures = true
  }

  jacocoTestReport {
    reports {
      html.enabled = true
      csv.enabled = true
      xml.enabled = true
    } 
  }

  defaultTasks 'build'

  jacocoTestReport.dependsOn(test)
  build.dependsOn javadoc
  build.dependsOn jacocoTestReport

}

task wrapper(type: Wrapper) {
  gradleVersion = '1.6'
}

